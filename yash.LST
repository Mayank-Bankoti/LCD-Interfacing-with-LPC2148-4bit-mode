ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 1   


ARM COMPILER V2.40a, COMPILATION OF MODULE yash
OBJECT MODULE PLACED IN yash.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe yash.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include <lpc214x.h>
    2          
    3          #define bit(x) (1 << x)
    4          
    5          void lcd_init();
    6          void cmd(unsigned char a);
    7          void dat(unsigned char b);
    8          void show(unsigned char *s);
    9          void lcd_delay();
   10          
   11          #define delay for(i = 0; i < 55000; i++)
   12          
   13          unsigned int range = 0, i;
   14          
   15          int main()
   16          {
   17   1          VPBDIV = 0x01; // PCLK = 60MHz
   18   1          IO1DIR |= 0x00FF0000; // Set P1.16 to P1.23 as outputs for D0-D7
   19   1          IO0DIR |= bit(10) | bit(11); // P0.10 and P0.11 as outputs for EN and RS
   20   1          lcd_init();
   21   1          cmd(0x89);
   22   1          show("www.embetronicx.com");
   23   1      
   24   1          while (1)
   25   1          {
   26   2              cmd(0x18);
   27   2              delay;
   28   2          }
   29   1      }
   30          
   31          void lcd_init()
   32          {
   33   1          cmd(0x02);
   34   1          cmd(0x28);
   35   1          cmd(0x0C);
   36   1          cmd(0x06);
   37   1          cmd(0x80);
   38   1      }
   39          
   40          void cmd(unsigned char a)
   41          {
   42   1          IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
   43   1          IO1PIN |= ((a & 0xF0) << 4); // Set D4-D7 bits with upper nibble of a
   44   1          IO0CLR |= bit(10); // EN = 0
   45   1          IO0CLR |= bit(11); // RS = 0
   46   1          IO0SET |= bit(10); // EN = 1
   47   1          lcd_delay();
   48   1          IO0CLR |= bit(10); // EN = 0
   49   1      
   50   1          IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
   51   1          IO1PIN |= (((a << 4) & 0xF0) << 4); // Set D4-D7 bits with lower nibble of a
   52   1          IO0CLR |= bit(10); // EN = 0
   53   1          IO0CLR |= bit(11); // RS = 0
   54   1          IO0SET |= bit(10); // EN = 1
   55   1          lcd_delay();
   56   1          IO0CLR |= bit(10); // EN = 0
   57   1      }
   58          
   59          void dat(unsigned char b)
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 2   

   60          {
   61   1          IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
   62   1          IO1PIN |= ((b & 0xF0) << 4); // Set D4-D7 bits with upper nibble of b
   63   1          IO0SET |= bit(10); // EN = 1
   64   1          IO0SET |= bit(11); // RS = 1 (Data mode)
   65   1          lcd_delay();
   66   1          IO0CLR |= bit(10); // EN = 0
   67   1      
   68   1          IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
   69   1          IO1PIN |= (((b << 4) & 0xF0) << 4); // Set D4-D7 bits with lower nibble of b
   70   1          IO0SET |= bit(10); // EN = 1
   71   1          IO0SET |= bit(11); // RS = 1 (Data mode)
   72   1          lcd_delay();
   73   1          IO0CLR |= bit(10); // EN = 0
   74   1      }
   75          
   76          void show(unsigned char *s)
   77          {
   78   1          while (*s)
   79   1          {
   80   2              dat(*s++);
   81   2          }
   82   1      }
   83          
   84          void lcd_delay()
   85          {
   86   1          unsigned int i;
   87   1          for (i = 0; i <= 1000; i++)
   88   1              ;
   89   1      }
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         lcd_init?T
 PUBLIC         cmd?T
 PUBLIC         dat?T
 PUBLIC         show?T
 PUBLIC         lcd_delay?T
 PUBLIC         main
 PUBLIC         range
 PUBLIC         i



*** DATA SEGMENT '?CON?yash':
 00000000          ??S_1:
 00000000            DB          'www.embetronicx.com',0x00

*** DATA SEGMENT '?DT0?yash':
 00000000          range:
 00000000           BEGIN_INIT
 00000000  00000000  DD          0x0
 00000004           END_INIT
 00000004          i:
 00000004            DS          4



*** CODE SEGMENT '?PR?main?yash':
   15: int main()
 00000000  B500      PUSH        {LR}
   17:     VPBDIV = 0x01; // PCLK = 60MHz
 00000002  2101      MOV         R1,#0x1
 00000004  4800      LDR         R0,=0xE01FC100
 00000006  7001      STRB        R1,[R0,#0x0]
   18:     IO1DIR |= 0x00FF0000; // Set P1.16 to P1.23 as outputs for D0-D7
 00000008  4800      LDR         R2,=0xFF0000
 0000000A  4800      LDR         R0,=0xE0028018
 0000000C  6801      LDR         R1,[R0,#0x0]
 0000000E  4311      ORR         R1,R2
 00000010  6001      STR         R1,[R0,#0x0]
   19:     IO0DIR |= bit(10) | bit(11); // P0.10 and P0.11 as outputs for EN and RS
 00000012  4800      LDR         R2,=0xC00
 00000014  4800      LDR         R0,=0xE0028008
 00000016  6801      LDR         R1,[R0,#0x0]
 00000018  4311      ORR         R1,R2
 0000001A  6001      STR         R1,[R0,#0x0]
   20:     lcd_init();
 0000001C  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 0000001E  FFF0      BL          lcd_init?T  ; T=0x0001  (2)
   21:     cmd(0x89);
 00000020  2089      MOV         R0,#0x89
 00000022  F7FF      BL          cmd?T  ; T=0x0001  (1)
 00000024  FFED      BL          cmd?T  ; T=0x0001  (2)
   22:     show("www.embetronicx.com");
 00000026  4800      LDR         R0,=??S_1 ; ??S_1
 00000028  F7FF      BL          show?T  ; T=0x0001  (1)
 0000002A  FFEA      BL          show?T  ; T=0x0001  (2)
   24:     while (1)
 0000002C          L_3:
   26:         cmd(0x18);
 0000002C  2018      MOV         R0,#0x18
 0000002E  F7FF      BL          cmd?T  ; T=0x0001  (1)
 00000030  FFE7      BL          cmd?T  ; T=0x0001  (2)
   27:         delay;
 00000032  2100      MOV         R1,#0x0
 00000034  4800      LDR         R0,=i ; i
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 4   

 00000036  6001      STR         R1,[R0,#0x0] ; i
 00000038  E003      B           L_7  ; T=0x00000042
 0000003A          L_5:
 0000003A  4800      LDR         R0,=i ; i
 0000003C  6801      LDR         R1,[R0,#0x0] ; i
 0000003E  3101      ADD         R1,#0x1
 00000040  6001      STR         R1,[R0,#0x0] ; i
 00000042          L_7:
 00000042  4800      LDR         R0,=i ; i
 00000044  6800      LDR         R0,[R0,#0x0] ; i
 00000046  4800      LDR         R1,=0xD6D8
 00000048  4288      CMP         R0,R1
 0000004A  D3F6      BCC         L_5  ; T=0x0000003A
   28:     }
 0000004C  E7EE      B           L_3  ; T=0x0000002C
   29: }
 0000004E  BC08      POP         {R3}
 00000050  4718      BX          R3
 00000052          ENDP ; 'main'


*** CODE SEGMENT '?PR?lcd_init?T?yash':
   31: void lcd_init()
 00000000  B500      PUSH        {LR}
   33:     cmd(0x02);
 00000002  2002      MOV         R0,#0x2
 00000004  F7FF      BL          cmd?T  ; T=0x0001  (1)
 00000006  FFFC      BL          cmd?T  ; T=0x0001  (2)
   34:     cmd(0x28);
 00000008  2028      MOV         R0,#0x28
 0000000A  F7FF      BL          cmd?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          cmd?T  ; T=0x0001  (2)
   35:     cmd(0x0C);
 0000000E  200C      MOV         R0,#0xC
 00000010  F7FF      BL          cmd?T  ; T=0x0001  (1)
 00000012  FFF6      BL          cmd?T  ; T=0x0001  (2)
   36:     cmd(0x06);
 00000014  2006      MOV         R0,#0x6
 00000016  F7FF      BL          cmd?T  ; T=0x0001  (1)
 00000018  FFF3      BL          cmd?T  ; T=0x0001  (2)
   37:     cmd(0x80);
 0000001A  2080      MOV         R0,#0x80
 0000001C  F7FF      BL          cmd?T  ; T=0x0001  (1)
 0000001E  FFF0      BL          cmd?T  ; T=0x0001  (2)
   38: }
 00000020  BC08      POP         {R3}
 00000022  4718      BX          R3
 00000024          ENDP ; 'lcd_init?T'


*** CODE SEGMENT '?PR?cmd?T?yash':
   40: void cmd(unsigned char a)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; a
 00000004  ---- Variable 'a' assigned to Register 'R4' ----
   42:     IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
 00000004  4800      LDR         R2,=0xFF00
 00000006  4800      LDR         R0,=0xE0028010
 00000008  6801      LDR         R1,[R0,#0x0]
 0000000A  4391      BIC         R1,R2
 0000000C  6001      STR         R1,[R0,#0x0]
   43:     IO1PIN |= ((a & 0xF0) << 4); // Set D4-D7 bits with upper nibble of a
 0000000E  1C20      MOV         R0,R4 ; a
 00000010  0602      LSL         R2,R0,#0x18 ; a
 00000012  0E12      LSR         R2,R2,#0x18
 00000014  20F0      MOV         R0,#0xF0
 00000016  4002      AND         R2,R0
 00000018  0112      LSL         R2,R2,#0x4
 0000001A  4800      LDR         R0,=0xE0028010
 0000001C  6801      LDR         R1,[R0,#0x0]
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 5   

 0000001E  4311      ORR         R1,R2
 00000020  6001      STR         R1,[R0,#0x0]
   44:     IO0CLR |= bit(10); // EN = 0
 00000022  4800      LDR         R2,=0x400
 00000024  4800      LDR         R0,=0xE002800C
 00000026  6801      LDR         R1,[R0,#0x0]
 00000028  4311      ORR         R1,R2
 0000002A  6001      STR         R1,[R0,#0x0]
   45:     IO0CLR |= bit(11); // RS = 0
 0000002C  4800      LDR         R2,=0x800
 0000002E  4800      LDR         R0,=0xE002800C
 00000030  6801      LDR         R1,[R0,#0x0]
 00000032  4311      ORR         R1,R2
 00000034  6001      STR         R1,[R0,#0x0]
   46:     IO0SET |= bit(10); // EN = 1
 00000036  4800      LDR         R2,=0x400
 00000038  4800      LDR         R0,=0xE0028004
 0000003A  6801      LDR         R1,[R0,#0x0]
 0000003C  4311      ORR         R1,R2
 0000003E  6001      STR         R1,[R0,#0x0]
   47:     lcd_delay();
 00000040  F7FF      BL          lcd_delay?T  ; T=0x0001  (1)
 00000042  FFDE      BL          lcd_delay?T  ; T=0x0001  (2)
   48:     IO0CLR |= bit(10); // EN = 0
 00000044  4800      LDR         R2,=0x400
 00000046  4800      LDR         R0,=0xE002800C
 00000048  6801      LDR         R1,[R0,#0x0]
 0000004A  4311      ORR         R1,R2
 0000004C  6001      STR         R1,[R0,#0x0]
   50:     IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
 0000004E  4800      LDR         R2,=0xFF00
 00000050  4800      LDR         R0,=0xE0028010
 00000052  6801      LDR         R1,[R0,#0x0]
 00000054  4391      BIC         R1,R2
 00000056  6001      STR         R1,[R0,#0x0]
   51:     IO1PIN |= (((a << 4) & 0xF0) << 4); // Set D4-D7 bits with lower nibble of a
 00000058  1C20      MOV         R0,R4 ; a
 0000005A  0602      LSL         R2,R0,#0x18 ; a
 0000005C  0E12      LSR         R2,R2,#0x18
 0000005E  0112      LSL         R2,R2,#0x4
 00000060  20F0      MOV         R0,#0xF0
 00000062  4002      AND         R2,R0
 00000064  0112      LSL         R2,R2,#0x4
 00000066  4800      LDR         R0,=0xE0028010
 00000068  6801      LDR         R1,[R0,#0x0]
 0000006A  4311      ORR         R1,R2
 0000006C  6001      STR         R1,[R0,#0x0]
   52:     IO0CLR |= bit(10); // EN = 0
 0000006E  4800      LDR         R2,=0x400
 00000070  4800      LDR         R0,=0xE002800C
 00000072  6801      LDR         R1,[R0,#0x0]
 00000074  4311      ORR         R1,R2
 00000076  6001      STR         R1,[R0,#0x0]
   53:     IO0CLR |= bit(11); // RS = 0
 00000078  4800      LDR         R2,=0x800
 0000007A  4800      LDR         R0,=0xE002800C
 0000007C  6801      LDR         R1,[R0,#0x0]
 0000007E  4311      ORR         R1,R2
 00000080  6001      STR         R1,[R0,#0x0]
   54:     IO0SET |= bit(10); // EN = 1
 00000082  4800      LDR         R2,=0x400
 00000084  4800      LDR         R0,=0xE0028004
 00000086  6801      LDR         R1,[R0,#0x0]
 00000088  4311      ORR         R1,R2
 0000008A  6001      STR         R1,[R0,#0x0]
   55:     lcd_delay();
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 6   

 0000008C  F7FF      BL          lcd_delay?T  ; T=0x0001  (1)
 0000008E  FFB8      BL          lcd_delay?T  ; T=0x0001  (2)
   56:     IO0CLR |= bit(10); // EN = 0
 00000090  4800      LDR         R2,=0x400
 00000092  4800      LDR         R0,=0xE002800C
 00000094  6801      LDR         R1,[R0,#0x0]
 00000096  4311      ORR         R1,R2
 00000098  6001      STR         R1,[R0,#0x0]
   57: }
 0000009A  BC10      POP         {R4}
 0000009C  BC08      POP         {R3}
 0000009E  4718      BX          R3
 000000A0          ENDP ; 'cmd?T'


*** CODE SEGMENT '?PR?dat?T?yash':
   59: void dat(unsigned char b)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; b
 00000004  ---- Variable 'b' assigned to Register 'R4' ----
   61:     IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
 00000004  4800      LDR         R2,=0xFF00
 00000006  4800      LDR         R0,=0xE0028010
 00000008  6801      LDR         R1,[R0,#0x0]
 0000000A  4391      BIC         R1,R2
 0000000C  6001      STR         R1,[R0,#0x0]
   62:     IO1PIN |= ((b & 0xF0) << 4); // Set D4-D7 bits with upper nibble of b
 0000000E  1C20      MOV         R0,R4 ; b
 00000010  0602      LSL         R2,R0,#0x18 ; b
 00000012  0E12      LSR         R2,R2,#0x18
 00000014  20F0      MOV         R0,#0xF0
 00000016  4002      AND         R2,R0
 00000018  0112      LSL         R2,R2,#0x4
 0000001A  4800      LDR         R0,=0xE0028010
 0000001C  6801      LDR         R1,[R0,#0x0]
 0000001E  4311      ORR         R1,R2
 00000020  6001      STR         R1,[R0,#0x0]
   63:     IO0SET |= bit(10); // EN = 1
 00000022  4800      LDR         R2,=0x400
 00000024  4800      LDR         R0,=0xE0028004
 00000026  6801      LDR         R1,[R0,#0x0]
 00000028  4311      ORR         R1,R2
 0000002A  6001      STR         R1,[R0,#0x0]
   64:     IO0SET |= bit(11); // RS = 1 (Data mode)
 0000002C  4800      LDR         R2,=0x800
 0000002E  4800      LDR         R0,=0xE0028004
 00000030  6801      LDR         R1,[R0,#0x0]
 00000032  4311      ORR         R1,R2
 00000034  6001      STR         R1,[R0,#0x0]
   65:     lcd_delay();
 00000036  F7FF      BL          lcd_delay?T  ; T=0x0001  (1)
 00000038  FFE3      BL          lcd_delay?T  ; T=0x0001  (2)
   66:     IO0CLR |= bit(10); // EN = 0
 0000003A  4800      LDR         R2,=0x400
 0000003C  4800      LDR         R0,=0xE002800C
 0000003E  6801      LDR         R1,[R0,#0x0]
 00000040  4311      ORR         R1,R2
 00000042  6001      STR         R1,[R0,#0x0]
   68:     IO1PIN &= 0xFFFF00FF; // Clear D4-D7 bits (P1.20 to P1.23)
 00000044  4800      LDR         R2,=0xFF00
 00000046  4800      LDR         R0,=0xE0028010
 00000048  6801      LDR         R1,[R0,#0x0]
 0000004A  4391      BIC         R1,R2
 0000004C  6001      STR         R1,[R0,#0x0]
   69:     IO1PIN |= (((b << 4) & 0xF0) << 4); // Set D4-D7 bits with lower nibble of b
 0000004E  1C20      MOV         R0,R4 ; b
 00000050  0602      LSL         R2,R0,#0x18 ; b
 00000052  0E12      LSR         R2,R2,#0x18
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 7   

 00000054  0112      LSL         R2,R2,#0x4
 00000056  20F0      MOV         R0,#0xF0
 00000058  4002      AND         R2,R0
 0000005A  0112      LSL         R2,R2,#0x4
 0000005C  4800      LDR         R0,=0xE0028010
 0000005E  6801      LDR         R1,[R0,#0x0]
 00000060  4311      ORR         R1,R2
 00000062  6001      STR         R1,[R0,#0x0]
   70:     IO0SET |= bit(10); // EN = 1
 00000064  4800      LDR         R2,=0x400
 00000066  4800      LDR         R0,=0xE0028004
 00000068  6801      LDR         R1,[R0,#0x0]
 0000006A  4311      ORR         R1,R2
 0000006C  6001      STR         R1,[R0,#0x0]
   71:     IO0SET |= bit(11); // RS = 1 (Data mode)
 0000006E  4800      LDR         R2,=0x800
 00000070  4800      LDR         R0,=0xE0028004
 00000072  6801      LDR         R1,[R0,#0x0]
 00000074  4311      ORR         R1,R2
 00000076  6001      STR         R1,[R0,#0x0]
   72:     lcd_delay();
 00000078  F7FF      BL          lcd_delay?T  ; T=0x0001  (1)
 0000007A  FFC2      BL          lcd_delay?T  ; T=0x0001  (2)
   73:     IO0CLR |= bit(10); // EN = 0
 0000007C  4800      LDR         R2,=0x400
 0000007E  4800      LDR         R0,=0xE002800C
 00000080  6801      LDR         R1,[R0,#0x0]
 00000082  4311      ORR         R1,R2
 00000084  6001      STR         R1,[R0,#0x0]
   74: }
 00000086  BC10      POP         {R4}
 00000088  BC08      POP         {R3}
 0000008A  4718      BX          R3
 0000008C          ENDP ; 'dat?T'


*** CODE SEGMENT '?PR?show?T?yash':
   76: void show(unsigned char *s)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; s
 00000004  ---- Variable 's' assigned to Register 'R4' ----
   78:     while (*s)
 00000004  E004      B           L_10  ; T=0x00000010
 00000006          L_12:
   80:         dat(*s++);
 00000006  1C20      MOV         R0,R4 ; s
 00000008  3401      ADD         R4,#0x1
 0000000A  7800      LDRB        R0,[R0,#0x0] ; s
 0000000C  F7FF      BL          dat?T  ; T=0x0001  (1)
 0000000E  FFF8      BL          dat?T  ; T=0x0001  (2)
   81:     }
 00000010          L_10:
 00000010  1C20      MOV         R0,R4 ; s
 00000012  7800      LDRB        R0,[R0,#0x0] ; s
 00000014  2800      CMP         R0,#0x0
 00000016  D1F6      BNE         L_12  ; T=0x00000006
   82: }
 00000018  BC10      POP         {R4}
 0000001A  BC08      POP         {R3}
 0000001C  4718      BX          R3
 0000001E          ENDP ; 'show?T'


*** CODE SEGMENT '?PR?lcd_delay?T?yash':
   85: {
 00000000            ; SCOPE-START
   87:     for (i = 0; i <= 1000; i++)
 00000000  2000      MOV         R0,#0x0
 00000002  ---- Variable 'i' assigned to Register 'R0' ----
   88:         ;
ARM COMPILER V2.40a,  yash                                                                 06/09/23  19:58:53  PAGE 8   

 00000002          L_14:
 00000002  3001      ADD         R0,#0x1
 00000004  1C01      MOV         R1,R0 ; i
 00000006  4AFA      LDR         R2,=0x3E8
 00000008  4291      CMP         R1,R2 ; i
 0000000A  D9FA      BLS         L_14  ; T=0x00000002
 0000000C            ; SCOPE-END
   89: }
 0000000C  4770      BX          R14
 0000000E          ENDP ; 'lcd_delay?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =         8
  const size           =        20
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
